ЛИНЕЙНЫЕ АЛГОРИТМЫ

1)Дана длина ребра куба. Найти объём куба и площадь его боковой поверхности.

a = float(input("Введите длину ребра куба: "))      # Вводим длину ребра куба
v = a**3                                            # Вычисляем объем куба
s_bok = 4 * a**2                                    # Вычисляем площадь боковой поверхности куба
print('Объем куба:', v)                             # Выводим результаты
print('Площадь боковой поверхности куба:',bok)

2) Известна длина окружности. Найти площадь круга, ограниченного этой окружностью. 
C = float(input("Введите длину окружности: "))      # Вводим длину окружности
r = C / (2 * 3.14)                                  # Вычисляем радиус круга
s = (C**2) / (4 * 3.14)                             # Вычисляем площадь круга
print('Радиус круга:' ,r)                           # Выводим результаты
print('Площадь круга:', s)

3) По данным сторонам прямоугольника вычислить периметр, площадь и длину диагонали.

import math
a = float(input("Введите длину стороны a прямоугольника: "))   # Вводим длины сторон прямоугольника
b = float(input("Введите длину стороны b прямоугольника: "))
p = 2 * a + 2 * b                                              # Вычисляем периметр прямоугольника
s = a * b                                                      # Вычисляем площадь прямоугольника
d = math.sqrt(a**2 + b**2)                                     # Вычисляем длину диагонали прямоугольника
print('Периметр прямоугольника:',p)                            # Выводим результаты
print('Площадь прямоугольника:' ,s)
print('Длина диагонали прямоугольника:', d)


РАЗВЕТВЛЯЮЩИЕСЯ АЛГОРИТМЫ

1)Даны действительные положительные числа x, y, z. Выяснить, существует ли треугольник с длинами сторон x, y z.

x = float(input("Введите длину стороны x: "))            #Вводим длины сторон треугольника
y = float(input("Введите длину стороны y: "))
z = float(input("Введите длину стороны z: "))

if x + y > z and x + z > y and y + z > x:               # С помощью логического цикла if проверяем, существует ли треугольник
    print("Треугольник существует.")
else:
    print("Треугольник не существует.")

2) Определить какая из точек - М1 (x1, y1) или М2 (x2,y2) - расположена ближе к началу координат. Вывести на экран дисплея координаты этой точки.

x1 = float(input("Введите координату x1: "))            # Вводим координаты точки М1
y1 = float(input("Введите координату y1: "))
x2 = float(input("Введите координату x2: "))            # Вводим координаты точки М2
y2 = float(input("Введите координату y2: "))
distance1 = (x1**2 + y1**2)**0.5                        # Вычисляем расстояния от каждой точки до начала координа
distance2 = (x2**2 + y2**2)**0.5
if distance1 < distance2:                               # Определяем, какая точка ближе и выводим её координаты
    print(f"Точка M1({x1}, {y1}) ближе к началу координат.")
else:
    print(f"Точка M2({x2}, {y2}) ближе к началу координат.")

3) Определить, какая из двух фигур (круг или квадрат) имеет наибольшую площадь. Известно, что сторона квадрата равна a, а радиус круга - r. 
Выведите на экран название и значение площади большей фигуры.

import math
a = float(input("Введите сторону квадрата (a): "))    # Вводим значения стороны квадрата и радиуса круга
r = float(input("Введите радиус круга (r): "))
square_area = a**2                                    # Вычисляем площади фигур
circle_area = math.pi * r**2
if square_area > circle_area:                         # Определяем, какая фигура имеет большую площадь и выводим результат
    print('Квадрат имеет большую площадь:', square_area)
else:
    print('Круг имеет большую площадь:', circle_area)




4) Для определения, попадает ли точка M(x, y) в круг с центром в точке (x0, y0) и радиусом r.
Можно использовать формулу для расстояния между двумя точками в декартовой системе координат.
Расстояние между точками (x1, y1) и (x2, y2) вычисляется по формуле:

import math
x = float(input("Введите координату x точки M: "))               # Вводим координаты точки M.
y = float(input("Введите координату y точки M: "))
x0 = float(input("Введите координату x0 центра круга: "))        # Вводим координаты центра круга и его радиус.
y0 = float(input("Введите координату y0 центра круга: "))
radius = float(input("Введите радиус круга: "))
distance = math.sqrt((x - x0)**2 + (y - y0)**2)                  # Вычисляем расстояние от точки M до центра круга.
if distance <= radius:                                           # Проверяем, попадает ли точка в круг.
    print("Точка M попадает в круг.")
else:
    print("Точка M не попадает в круг.")


ЦИКЛИЧЕСКИЕ АЛГОРИТМЫ
1)  Дано натураньное число n. Вычислить сумму 1/sin(1) + 1/(sin(1+2)) + ... + 1/(sin(1+2+...+n)).

import math
n = int(input("Введите натуральное число n: "))                 # Вводим натуральное число n
sum_result = 0                                                  # Инициализируем переменную для суммы
current_sin_sum = 0
for i in range(1, n + 1):                                       #Вычисляем сумму  1/sin(1) + 1/(sin(1+2)) + ... + 1/(sin(1+2+...+n))
    current_sin_sum += math.sin(i)
    sum_result += 1 / current_sin_sum
print(' сумма равна: ',sum_result)



2) Дано действительно число x, натурально число n.


x = float(input("Введите действительное число x: "))          # Вводим действительное число x и натуральное число n
n = int(input("Введите натуральное число n: "))
result = 1                                                    # Инициализируем результат
for i in range(n + 1):                                        # Вычисляем выражение x(x-n)(x-2n)(x-3n)...(x-n^2)
    result *= (x - i * n)
print('Результат выражения x(x-n)(x-2n)(x-3n)...(x-n^2) равен:',result)


x = float(input("Введите действительное число x: "))          # Вводим действительное число x и натуральное число n
n = int(input("Введите натуральное число n: "))
result = 0                                                    # Инициализируем результат
current_denominator = 1
for i in range(n + 1):                                        # Вычисляем выражение 1/x + 1/(x(x+1)) + ... + 1/(x(x+1)...(x+n))
    current_denominator *= (x + i)
    result += 1 / current_denominator
print('Результат выражения 1/x + 1/(x(x+1)) + ... + 1/(x(x+1)...(x+n)) равен: ',result)


import math

x = float(input("Введите действительное число x: "))          # Вводим действительное число x и натуральное число n
n = int(input("Введите натуральное число n: "))
result = 0                                                    # Инициализируем результат
for i in range(1, n + 1):                                     # Вычисляем сумму x^i / i! для i от 1 до n
    result += (x ** i) / math.factorial(i)
print('Результат выражения x^1/1! + x^2/2! + ... + x^n/n! равен:' ,result)





